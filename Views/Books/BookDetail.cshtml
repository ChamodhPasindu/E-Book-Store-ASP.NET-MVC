@model EBookStore.Models.DTO.BookDetailViewModel

@if (TempData["ErrorMessage"] != null)
{
	<div class="alert alert-danger alert-dismissible fade show" role="alert">
		@TempData["ErrorMessage"]
		<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
	</div>
}

<div class="book-detail container mt-5">
	<!-- Book Title -->
	<h2 class="text-center text-uppercase display-6 fw-bold">@Model.Book.Title</h2>
	<hr />

	<div class="row mt-4">
		<!-- Book Image -->
		<div class="col-md-5 text-center">
			<img src="data:@Model.Book.ImageMimeType;base64,@Convert.ToBase64String(@Model.Book.ImageData!)" alt="@Model.Book.Title" class="img-fluid rounded shadow" style="width: 100%; height: auto; max-width: 300px;" />
		</div>

		<!-- Book Info -->
		<div class="col-md-7">
			<p><strong>Author:</strong> @Model.Book.Author</p>
			<p><strong>Category:</strong> @Model.Book.Category</p>
			<p><strong>Price:</strong> <span class="text-primary">@Model.Book.Price.ToString("C", new System.Globalization.CultureInfo("en-LK"))</span></p>
			<p><strong>In Stock:</strong> @Model.Book.QuantityInStock</p>
			@if (Model.Book.QuantityInStock < 1)
			{
				<p class="card-text text-muted">
					<span class="badge bg-danger">Out Of Stock</span>
				</p>
			}
			else
			{
				<p class="card-text text-muted">
					<span class="badge bg-success">In Stock</span>
				</p>
			}
			<p>
				<strong>Rating:</strong>
				@if (Model.Book.FeedBacks.Any()) // Check if there are any feedbacks
				{
					var averageRating = Model.Book.FeedBacks.Average(f => f.Rating);
					for (var i = 1; i <= 5; i++)
					{
						if (i <= averageRating)
						{
							// Full Star
							<i class="bi-star-fill" style="color: #FFD700;"></i>
						}
						else
						{
							// Empty Star
							<i class="bi-star" style="color: #FFD700;"></i>
						}
					}
				}
				else
				{
					// If there are no feedbacks, display zero stars
					for (var i = 1; i <= 5; i++)
					{
						<i class="bi-star" style="color: #FFD700;"></i> <!-- Empty Star -->
					}
				}
				<span class="text-muted">(@Model.Book.FeedBacks.Count())</span>
			</p>


			<!-- Book Description -->
			<div class="book-description mt-3">
				<h5 class="fw-bold">Description</h5>
				<p class="text-muted">@Model.Book.Description</p>
			</div>

			<!-- Quantity Controls -->
			<div class="quantity-controls mb-3 d-flex align-items-center">
				<label class="me-2"><strong>Quantity:</strong></label>
				<div class="input-group" style="width: 130px;">
					<button class="btn btn-outline-secondary" type="button" onclick="decreaseQuantity()">-</button>
					<input type="number" id="quantity" value="1" min="1" max="@Model.Book.QuantityInStock" readonly class="form-control text-center" />
					<button class="btn btn-outline-secondary" type="button" onclick="increaseQuantity()">+</button>
				</div>
			</div>

			<!-- Add to Cart Button -->
			<button @(Model.Book.QuantityInStock <= 0 ? "disabled" : "") class="btn btn-danger" onclick="addToCart(@Model.Book.BookID)">
				<i class="bi-cart"></i>  Add to Cart
			</button>
		</div>
	</div>

	<hr class="my-5" />
	<h4 class="fw-bold">Reviews</h4>

	<!-- Reviews Section -->
	@if (Model.Feedbacks.Any())
	{
		<div class="list-group mb-5">
			@foreach (var feedback in Model.Feedbacks)
			{
				<div class="list-group-item list-group-item-action mb-2 border rounded shadow-sm">

					<!-- Display Star Rating -->
					<p><strong>@feedback.User.Email:</strong></p>
					<div class="rating">
						@for (int i = 1; i <= 5; i++)
						{
							if (i <= feedback.Rating)
							{
								<!-- Full Star -->
								<i class="bi-star-fill" style="color: #FFD700;"></i>
							}
							else
							{
								<!-- Empty Star -->
								<i class="bi-star" style="color: #FFD700;"></i>
							}
						}
					</div>

					<!-- Review Text -->
					<p class="mb-1 mt-2">@feedback.FeedbackText</p>
					<p class="text-muted"><small>@feedback.FeedbackDate.ToShortDateString()</small></p>
				</div>
			}
		</div>
	}
	else
	{
		<div class="col-md-12 text-center">
			<p class="alert alert-warning">No reviews yet.</p>
		</div>
	}

	<!-- Leave a Review Section -->
	@if (Model.HasPurchasedBook)
	{
		<h5>Leave a Review</h5>
		<form asp-action="AddReview" method="post" class="border p-4 shadow-sm rounded">
			<input type="hidden" name="bookId" value="@Model.Book.BookID" />

			<div class="mb-3">
				<label for="FeedbackText" class="form-label">Your Review</label>
				<textarea class="form-control" id="FeedbackText" name="FeedbackText" required rows="3"></textarea>
			</div>

			<div class="mb-3">
				<label for="Rating" class="form-label">Rating</label>
				<select class="form-control" id="Rating" name="Rating" required>
					<option value="1">1</option>
					<option value="2">2</option>
					<option value="3">3</option>
					<option value="4">4</option>
					<option value="5">5</option>
				</select>
			</div>

			<button type="submit" class="btn btn-success">
				<i class="fas fa-paper-plane"></i> Submit Review
			</button>
		</form>
	}
	else
	{
		<p class="text-muted">You must purchase this book to leave a review.</p>
	}
</div>

@section Scripts {
	<script>
		function increaseQuantity() {
			var qtyInput = document.getElementById("quantity");
			if (parseInt(qtyInput.value) < @Model.Book.QuantityInStock) {
				qtyInput.value = parseInt(qtyInput.value) + 1;
			}
		}

		function decreaseQuantity() {
			var qtyInput = document.getElementById("quantity");
			if (parseInt(qtyInput.value) > 1) {
				qtyInput.value = parseInt(qtyInput.value) - 1;
			}
		}

		function addToCart(bookId) {
			var qtyInput = document.getElementById("quantity");

			$.ajax({
				url: '/Order/AddToCart',
				type: 'POST',
				data: { bookId: bookId, quantity: parseInt(qtyInput.value) },
				success: function (response) {
					alert('Book added to cart!');
					location.reload();
				},
				error: function (xhr, status, error) {
					alert('Error adding book to cart: ' + error);
				}
			});
		}
	</script>
}
